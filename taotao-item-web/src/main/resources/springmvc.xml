<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
         http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.taotao.item.controller" />
	
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:*.properties" />
	
	<!-- 注解驱动 -->
	<mvc:annotation-driven />

	<!--
		注解驱动ResponseBody 中文乱码解决
	 -->
	<mvc:annotation-driven >
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8"/>
				<property name="supportedMediaTypes">
					<list>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="text"/>
							<constructor-arg index="1" value="plain"/>
							<constructor-arg index="2" value="UTF-8"/>
						</bean>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg index="0" value="*"/>
							<constructor-arg index="1" value="*"/>
							<constructor-arg index="2" value="UTF-8"/>
						</bean>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!--spring的freemaker管理对象-->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!--模板路径 相对路径：相对项目路径-->
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<!--配置编码格式-->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!--发布者-->
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://192.168.25.168:61616" />
	</bean>
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="targetConnectionFactory" />
	</bean>
	<!-- 配置生产者 -->
	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<!--这个是主题目的地，一对多的 订阅-->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg name="name" value="spring-topic" />
	</bean>

	<!-- 接收消息 -->
	<!-- 配置监听器 -->
	<bean id="itemChangeListener" class="com.taotao.item.listener.ItemChangeListener" />
	<!-- 消息监听容器 -->
	<bean class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="topicDestination" />
		<property name="messageListener" ref="itemChangeListener" />
	</bean>





	<!-- 引用dubbo服务 -->
	<dubbo:application name="taotao-item-web"/>
	<dubbo:registry protocol="zookeeper" address="192.168.25.167:2181"/>
	<!-- 接收服务 
		interface:我消费那个接口 com.taotao.service.ItemService
		id:itemService id的注入
		<dubbo:reference interface="com.taotao.search.service.SearchService" id="searchService" timeout="300000"/>
	-->
	<dubbo:reference interface="com.taotao.service.ItemService" id="itemService" timeout="300000"/>
	<dubbo:reference interface="com.taotao.service.ItemParamItemService" id="itemParamItemService" timeout="300000"/>
</beans>
